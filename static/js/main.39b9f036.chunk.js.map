{"version":3,"sources":["components/Header/styles.module.css","components/App/styles.module.css","components/Header/index.tsx","components/App/index.tsx","index.tsx","stores/favorites.ts","interfaces.ts","stores/search.ts","stores/main.ts","api/index.ts"],"names":["module","exports","Header","observer","className","S","header","button_burger","onClick","mainStore","sidebarIsOpen","toggleSidebar","headerTitle","launches_stats","api","totalLaunches","totalRockets","Table","React","lazy","App","useEffect","fetchData","app","fallback","rootElement","document","getElementById","ReactDOM","render","favoritesStore","favoritesDataStore","Favorites","loadFromLocalStorage","makeObservable","this","observable","addItem","action","bound","deleteItem","localStorage","setItem","JSON","stringify","item","favoriteDate","Date","now","updateLocalStorage","id","index","findIndex","push","splice","localStorageItem","getItem","parse","sort","a","b","launchSchema","z","object","name","string","dataType","literal","success","union","boolean","null","flight_number","number","links","webcast","wikipedia","patch","small","rocket","date_local","date_unix","details","nullable","arrLaunchesSchema","array","rocketSchema","flickr_images","description","height","meters","diameter","mass","kg","arrRocketsSchema","searchStore","keyword","filterCategory","addKeyword","findItem","changeFilterCategory","filteredData","computed","value","regexp","RegExp","match","category","currentCategory","filter","currentData","_isLoading","_page","_selectedCategory","_selectedItemId","_rocket","launchesItems","rocketsItems","rocketItem","currentItem","flow","loadMoreLaunches","setIsLoading","setCategory","setLaunchesItems","setRocketsItems","setRocketItem","setItemId","find","concat","type","page","fetchLaunches","then","catch","e","console","log","fetchRockets","status","errorMessage","updateTotalLaunches","updateTotalRockets","updateErrorMessage","source","path","data","config","fetch","body","headers","request","json","_getData","options","limit","method","result","totalDocs","_transformRocketsData","docs","error","pagination","_transformLaunchesData","map","total","message"],"mappings":"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","file":"static/js/main.39b9f036.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__D7Cd9\",\"headerTitle\":\"styles_headerTitle__22Tb8\",\"button_burger\":\"styles_button_burger__1i_19\",\"launches_stats\":\"styles_launches_stats__2YUG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__1VXZu\",\"error_message\":\"styles_error_message__cFkPk\"};","import React from 'react'\nimport S from './styles.module.css'\nimport {mainStore} from '../../stores'\nimport {observer} from 'mobx-react'\nimport {api} from '../../api'\n\nexport const Header: React.FC = observer(() => {\n  return (\n    <header className={S.header}>\n      <button\n        className={S.button_burger}\n        onClick={() => {\n          mainStore.sidebarIsOpen\n            ? mainStore.toggleSidebar(false)\n            : mainStore.toggleSidebar(true)\n        }}>\n        {mainStore.sidebarIsOpen ? (\n          <i className=\"fas fa-times\" />\n        ) : (\n          <i className=\"fas fa-bars\" />\n        )}\n      </button>\n      <h1 className={S.headerTitle}>\n        <i className=\"fas fa-space-shuttle\" />\n        SpaceX App\n      </h1>\n      <div className={S.launches_stats}>\n        <p>Launches: {api.totalLaunches}</p>\n        <p>Rockets: {api.totalRockets}</p>\n      </div>\n    </header>\n  )\n})\n","import React, {Suspense, useEffect} from 'react'\nimport {observer} from 'mobx-react'\n\nimport {mainStore} from '../../stores'\n\nimport {Header} from '../Header'\n\nimport S from './styles.module.css'\n\nconst Table = React.lazy(() => import('../Table'))\n\nexport const App: React.FC = observer(() => {\n  useEffect(() => {\n    mainStore.fetchData('Launches')\n    mainStore.fetchData('Rockets')\n  }, [])\n\n  return (\n    <div className={S.app}>\n      <Header />\n      <Suspense fallback={<h1>....Loading</h1>}>\n        <Table />\n      </Suspense>\n    </div>\n  )\n})\n","import {StrictMode} from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {App} from './components/App/'\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n)\n","import {makeObservable, observable, action} from 'mobx'\nimport {ILaunchesData, IRocketsData} from '../interfaces'\n\nexport class Favorites {\n  favoritesDataStore: Array<ILaunchesData | IRocketsData> =\n    Favorites.loadFromLocalStorage()\n\n  constructor() {\n    makeObservable(this, {\n      favoritesDataStore: observable,\n      addItem: action.bound,\n      deleteItem: action.bound\n    })\n  }\n\n  private static loadFromLocalStorage(): Array<\n    ILaunchesData | IRocketsData\n  > {\n    const localStorageItem =\n      localStorage.getItem('favorites')\n\n    return !localStorageItem\n      ? []\n      : JSON.parse(localStorageItem).sort(\n          (\n            a: {favoriteDate: number},\n            b: {favoriteDate: number}\n          ) => b.favoriteDate - a.favoriteDate\n        )\n  }\n\n  private updateLocalStorage() {\n    localStorage.setItem(\n      'favorites',\n      JSON.stringify(this.favoritesDataStore)\n    )\n  }\n\n  set addToFavorites(item: ILaunchesData | IRocketsData) {\n    item.favoriteDate = Date.now()\n    this.addItem(item)\n    this.updateLocalStorage()\n  }\n\n  set deleteFromFavorites(id: string | null) {\n    const index = this.favoritesDataStore.findIndex(\n      (item: {id: string}) => item.id === id\n    )\n    this.deleteItem(index)\n    this.updateLocalStorage()\n  }\n\n  addItem(item: ILaunchesData | IRocketsData) {\n    this.favoritesDataStore.push(item)\n  }\n\n  deleteItem(index: number) {\n    this.favoritesDataStore.splice(index, 1)\n  }\n}\n\nexport const favoritesStore = new Favorites()\n","import {z} from 'zod'\n\nexport const launchSchema = z.object({\n  name: z.string(),\n  id: z.string(),\n  dataType: z.literal('Launches'),\n  success: z.union([z.boolean(), z.null()]),\n  flight_number: z.number(),\n  links: z.object({\n    webcast: z.union([z.string(), z.null()]),\n    wikipedia: z.union([z.string(), z.null()]),\n    patch: z.object({\n      small: z.union([z.string(), z.null()])\n    })\n  }),\n  rocket: z.string(),\n  date_local: z.string(),\n  date_unix: z.number(),\n  details: z.string().nullable(),\n  favoriteDate: z.number()\n})\n\nexport const arrLaunchesSchema = z.array(launchSchema)\n\nexport type ILaunchesData = z.infer<typeof launchSchema>\n\nexport const rocketSchema = z.object({\n  name: z.string(),\n  id: z.string(),\n  flickr_images: z.array(z.string()),\n  dataType: z.literal('Rockets'),\n  description: z.string(),\n  height: z.object({\n    meters: z.number()\n  }),\n  diameter: z.object({\n    meters: z.number()\n  }),\n  mass: z.object({\n    kg: z.number()\n  }),\n  favoriteDate: z.number()\n})\n\nexport const arrRocketsSchema = z.array(rocketSchema)\n\nexport type IRocketsData = z.infer<typeof rocketSchema>\n","import {\n  makeObservable,\n  observable,\n  action,\n  computed\n} from 'mobx'\nimport {favoritesStore, mainStore} from './index'\n\nclass SearchStore {\n  keyword = ''\n  filterCategory = ''\n\n  constructor() {\n    makeObservable(this, {\n      keyword: observable,\n      addKeyword: action.bound,\n      findItem: action,\n      filterCategory: observable,\n      changeFilterCategory: action.bound,\n      filteredData: computed\n    })\n  }\n\n  addKeyword(value: string) {\n    this.keyword = value\n  }\n\n  findItem(item: {name: string}) {\n    const regexp = new RegExp(this.keyword, 'i')\n    return item.name.match(regexp)\n  }\n\n  changeFilterCategory(category: string) {\n    this.filterCategory = category\n  }\n\n  get filteredData() {\n    if (mainStore.currentCategory === 'Favorites') {\n      return favoritesStore.favoritesDataStore\n        .filter((item: {dataType: string}) =>\n          this.filterCategory !== ''\n            ? item.dataType === this.filterCategory\n            : true\n        )\n        .filter((item: {name: string}) =>\n          this.keyword ? this.findItem(item) : true\n        )\n    }\n\n    return mainStore.currentData\n  }\n}\n\nexport const searchStore = new SearchStore()\n","import {\n  makeObservable,\n  observable,\n  computed,\n  action,\n  flow\n} from 'mobx'\nimport {api} from '../api'\n\nimport {favoritesStore} from './favorites'\nimport {\n  arrLaunchesSchema,\n  arrRocketsSchema,\n  ILaunchesData,\n  IRocketsData\n} from '../interfaces'\nimport {searchStore} from './search'\n\nclass Main {\n  _isLoading = true\n  _page = 1\n  _selectedCategory = 'Launches'\n  _selectedItemId: string | null = null\n  _rocket: IRocketsData | undefined\n  sidebarIsOpen = false\n  launchesItems: Array<ILaunchesData> = []\n  rocketsItems: Array<IRocketsData> = []\n\n  constructor() {\n    makeObservable(this, {\n      _isLoading: observable,\n      _page: observable,\n      _selectedItemId: observable,\n      _selectedCategory: observable,\n      _rocket: observable,\n      sidebarIsOpen: observable,\n      currentCategory: computed,\n      launchesItems: observable,\n      rocketsItems: observable,\n      rocketItem: computed,\n      currentData: computed,\n      currentItem: computed,\n      fetchData: flow.bound,\n      loadMoreLaunches: action.bound,\n      setIsLoading: action.bound,\n      setCategory: action.bound,\n      setLaunchesItems: action.bound,\n      setRocketsItems: action.bound,\n      setRocketItem: action.bound,\n      setItemId: action.bound,\n      toggleSidebar: action.bound\n    })\n  }\n\n  get currentCategory() {\n    return this._selectedCategory\n  }\n\n  get currentData(): Array<ILaunchesData | IRocketsData> {\n    if (this._selectedCategory === 'Rockets')\n      return this.rocketsItems\n\n    if (this._selectedCategory === 'Favorites')\n      if (!favoritesStore.favoritesDataStore) {\n        return []\n      } else {\n        return favoritesStore.favoritesDataStore\n      }\n\n    return this.launchesItems\n  }\n\n  get currentItem(): ILaunchesData | IRocketsData {\n    return (\n      this.currentData.find(\n        (item: {id: string}) =>\n          item.id === this._selectedItemId\n      ) || this.currentData[0]\n    )\n  }\n\n  get rocketItem() {\n    return this._rocket\n  }\n\n  set changeCategory(category: string) {\n    this.setCategory(category)\n    this.setItemId(null)\n    searchStore.changeFilterCategory('')\n  }\n\n  set changeItemId(id: string | null) {\n    this.setItemId(id)\n  }\n\n  setCategory(category: string) {\n    this._selectedCategory = category\n  }\n\n  setItemId(id: string | null) {\n    this._selectedItemId = id\n  }\n\n  setRocketItem(id: string) {\n    this._rocket = this.rocketsItems.find(\n      (item: {id: string}) => item.id === id\n    )\n  }\n\n  setLaunchesItems(\n    item: ILaunchesData[] | undefined\n  ): void {\n    this.launchesItems = this.launchesItems.concat(\n      arrLaunchesSchema.parse(item)\n    )\n  }\n\n  setRocketsItems(item: IRocketsData[] | undefined): void {\n    this.rocketsItems = arrRocketsSchema.parse(item)\n  }\n\n  setIsLoading(type: boolean) {\n    this._isLoading = type\n  }\n\n  *fetchData(type: string, page: number = this._page) {\n    this.setIsLoading(true)\n\n    if (type === 'Launches') {\n      yield api\n        .fetchLaunches(page)\n        .then((item?: ILaunchesData[]) => {\n          this.setLaunchesItems(item)\n          this.setIsLoading(false)\n        })\n        .catch((e) => {\n          console.log(e, 'Error FETCH')\n          return false\n        })\n    }\n\n    if (type === 'Rockets') {\n      yield api\n        .fetchRockets()\n        .then((item?: IRocketsData[]) => {\n          this.setRocketsItems(item)\n          this.setIsLoading(false)\n        })\n        .catch((e) => console.log(e, 'Error'))\n    }\n  }\n\n  toggleSidebar(status: boolean) {\n    this.sidebarIsOpen = status\n  }\n\n  loadMoreLaunches() {\n    this._page++\n    this.fetchData('Launches')\n  }\n}\n\nexport const mainStore = new Main()\n","import {action, makeObservable, observable} from 'mobx'\nimport {ILaunchesData, IRocketsData} from '../interfaces'\n\nexport const BASE_URL = 'https://api.spacexdata.com/v4/'\n\nclass Api {\n  totalLaunches = 0\n  totalRockets = 0\n  errorMessage = ''\n  constructor() {\n    makeObservable(this, {\n      updateTotalLaunches: action.bound,\n      updateTotalRockets: action.bound,\n      totalLaunches: observable,\n      totalRockets: observable,\n      errorMessage: observable,\n      updateErrorMessage: action.bound\n    })\n  }\n\n  async _getData(source: {\n    path: string\n    data?: any\n    config?: any\n  }) {\n    const {path, data, config} = source\n    try {\n      const request = await fetch(`${BASE_URL}${path}`, {\n        ...config,\n        body: JSON.stringify(data),\n        headers: {\n          'Content-type': 'application/json'\n        }\n      })\n      return await request.json()\n    } catch (e) {\n      this.updateErrorMessage(\n        \"Error! Don't get data from server\"\n      )\n    }\n  }\n\n  async fetchRockets(): Promise<any[] | undefined> {\n    try {\n      const result = await this._getData({\n        path: 'rockets/query',\n        data: {\n          options: {\n            limit: 4\n          }\n        },\n        config: {method: 'POST'}\n      })\n      this.updateTotalRockets(result.totalDocs)\n      return this._transformRocketsData(result.docs)\n    } catch (e) {\n      console.error('Loading rockets error: ', e)\n    }\n  }\n\n  async fetchLaunches(\n    page: number\n  ): Promise<any[] | undefined> {\n    try {\n      const result = await this._getData({\n        path: 'launches/query',\n        data: {\n          options: {\n            limit: 15,\n            sort: {\n              date_local: 'desc'\n            },\n            page,\n            pagination: true\n          }\n        },\n        config: {method: 'POST'}\n      })\n      this.updateTotalLaunches(result.totalDocs)\n      return this._transformLaunchesData(result.docs)\n    } catch (e) {\n      console.error('Loading rockets error: ', e)\n    }\n  }\n\n  _transformLaunchesData(data: any): any[] {\n    return data.map((item: ILaunchesData) => {\n      return {\n        ...item,\n        dataType: 'Launches',\n        favoriteDate: 0\n      }\n    })\n  }\n\n  _transformRocketsData(data: any): any[] {\n    return data.map((item: IRocketsData) => {\n      return {\n        ...item,\n        dataType: 'Rockets',\n        favoriteDate: 0\n      }\n    })\n  }\n\n  updateTotalLaunches(total: number) {\n    this.totalLaunches = total\n  }\n\n  updateTotalRockets(total: number) {\n    this.totalRockets = total\n  }\n\n  updateErrorMessage(message: string) {\n    this.errorMessage = message\n  }\n}\n\nexport const api = new Api()\n"],"sourceRoot":""}